node_id={{ item.value.id }}
node_name={{ item.key }}
conninfo='host={{ item.key }} user=repmgr dbname=repmgr connect_timeout=2'
data_directory='/var/lib/postgresql/{{postgres_version}}/main'

use_replication_slots=yes
monitoring_history=yes

service_start_command   = 'sudo /usr/bin/pg_ctlcluster {{postgres_version}} main start'
service_stop_command    = 'sudo /usr/bin/pg_ctlcluster {{postgres_version}} main stop'
service_restart_command = 'sudo /usr/bin/pg_ctlcluster {{postgres_version}} main restart'
service_reload_command  = 'sudo /usr/bin/pg_ctlcluster {{postgres_version}} main reload'
service_promote_command = 'sudo /usr/bin/pg_ctlcluster {{postgres_version}} main promote'

promote_check_timeout = 10
recovery_min_apply_delay = {{ item.value.delayed_replica_delay | default(0, true) }} 
priority = {% if item.value.delayed_replica_delay is defined %}0{% else %}{{ item.value.priority | default(100, true) }}{% endif %}

failover=automatic
promote_command='/usr/bin/repmgr standby promote -f /etc/repmgr.conf --log-to-file'
follow_command='/usr/bin/repmgr standby follow -f /etc/repmgr.conf --log-to-file --upstream-node-id=%n'
reconnect_attempts={{ repmgr_reconnect_attempts }}
reconnect_interval={{ repmgr_reconnect_interval }}


log_file='/var/log/postgresql/repmgrd.log'